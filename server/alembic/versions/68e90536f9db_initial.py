"""initial

Revision ID: 68e90536f9db
Revises: 
Create Date: 2025-07-13 21:04:54.025857

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '68e90536f9db'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('disabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('referral_code', sa.String(length=10), nullable=False),
    sa.Column('referred_by', sa.Integer(), nullable=True),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('honor_points', sa.Float(), nullable=True),
    sa.Column('streak_days', sa.Integer(), nullable=True),
    sa.Column('last_streak_date', sa.DateTime(), nullable=True),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['referred_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('referral_code'),
    sa.UniqueConstraint('username')
    )
    op.create_table('points_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('reference_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reference_id')
    )
    op.create_index(op.f('ix_points_transactions_id'), 'points_transactions', ['id'], unique=False)
    op.create_table('submissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('chain', sa.String(), nullable=False),
    sa.Column('website', sa.String(), nullable=False),
    sa.Column('token_symbol', sa.String(), nullable=False),
    sa.Column('device_type', sa.String(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('snapshot_date', sa.DateTime(), nullable=True),
    sa.Column('max_reward', sa.Float(), nullable=True),
    sa.Column('eligibility_summary', sa.String(), nullable=True),
    sa.Column('eligibility_criteria', sa.String(), nullable=True),
    sa.Column('steps_text', sa.String(), nullable=True),
    sa.Column('intel_note', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=False),
    sa.Column('submitted_by', sa.Integer(), nullable=False),
    sa.Column('accuracy_multiplier', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['submitted_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_submissions_id'), 'submissions', ['id'], unique=False)
    op.create_table('user_nft_rewards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('nft_id', sa.Integer(), nullable=False),
    sa.Column('tier', sa.String(), nullable=False),
    sa.Column('awarded_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_nft_rewards_id'), 'user_nft_rewards', ['id'], unique=False)
    op.create_table('airdrop_steps',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('step_order', sa.Integer(), nullable=False),
    sa.Column('screenshot_url', sa.String(length=250), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('airdrop_tracking',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('completed_steps', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'submission_id')
    )
    op.create_table('submission_votes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('vote', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_submission_votes_id'), 'submission_votes', ['id'], unique=False)
    op.create_table('timers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('reminder_interval', sa.Integer(), nullable=False),
    sa.Column('next_reminder_time', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_timers_id'), 'timers', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_timers_id'), table_name='timers')
    op.drop_table('timers')
    op.drop_index(op.f('ix_submission_votes_id'), table_name='submission_votes')
    op.drop_table('submission_votes')
    op.drop_table('airdrop_tracking')
    op.drop_table('airdrop_steps')
    op.drop_index(op.f('ix_user_nft_rewards_id'), table_name='user_nft_rewards')
    op.drop_table('user_nft_rewards')
    op.drop_index(op.f('ix_submissions_id'), table_name='submissions')
    op.drop_table('submissions')
    op.drop_index(op.f('ix_points_transactions_id'), table_name='points_transactions')
    op.drop_table('points_transactions')
    op.drop_table('users')
    # ### end Alembic commands ###
